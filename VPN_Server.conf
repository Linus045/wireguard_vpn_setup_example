# For Windows try
# https://github.com/micahmo/WgServerforWindows

# Config for a linux server using iptables
#################################################################
[Interface]
# the private key of the server
PrivateKey = cEsOX4vOMGtA9............./cbKG5Fo=
# the port the server listens on for wireguard connections
ListenPort = 55789
# the subnet of the server's VPN network
Address = 192.168.5.1/24


# Optionally the iptables configuration below can be done inside the iptables config files
# instead of the placeholder %i the correct interface name should be used (the interface name is the name
# of this config file when using wg-quick i.e. VPN_Server)
# make sure that packet forwarding is enabled in the kernel (sysctl net.ipv4.ip_forward=1) or
# for ipv6 (sysctl net.ipv6.conf.all.forwarding=1)

# 'enp2s0' is the local network interface of the server and
# should be replaced with the correct interface name
# Allow forwarding packets on the interface
PostUp = iptables -A FORWARD -i %i -j ACCEPT
PostDown = iptables -D FORWARD -i %i -j ACCEPT

PostUp = iptables -A FORWARD -o %i -j ACCEPT
PostDown = iptables -D FORWARD -o %i -j ACCEPT

# nat the packets from the wireguard interface to the host's network interface
PostUp = iptables -t nat -A POSTROUTING -o enp2s0 -j MASQUERADE
PostDown = iptables -t nat -D POSTROUTING -o enp2s0 -j MASQUERADE


PostUp = ip6tables -A FORWARD -i %i -j ACCEPT
PostUp = ip6tables -A FORWARD -o %i -j ACCEPT
PostUp = ip6tables -t nat -A POSTROUTING -o enp2s0 -j MASQUERADE
PostDown = ip6tables -D FORWARD -i %i -j ACCEPT
PostDown = ip6tables -D FORWARD -o %i -j ACCEPT
PostDown = ip6tables -t nat -D POSTROUTING -o enp2s0 -j MASQUERADE

# allow the server to forward packets
PostUp = iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
PostDown = iptables -D FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

PostUp = iptables -A FORWARD -i enp2s0 -o %i -j ACCEPT
PostDown = iptables -D FORWARD -i enp2s0 -o %i -j ACCEPT

PostUp = iptables -t nat -A POSTROUTING -o enp2s0 -j MASQUERADE
PostDown = iptables -t nat -D POSTROUTING -o enp2s0 -j MASQUERADE

# setup route to transfer packets back over the wireguard interface
# THIS SHOULD BE DONE AUTOMATICALLY (see `ip route` command), THIS IS JUST TO CHECK
#PostUp = ip route add 192.168.5.0/24 dev VPN_Server
#PreDown = ip route delete 192.168.5.0/24 dev VPN_Server



[Peer]
# PC 1 e.g. laptop
# public key of the client that is exchanged with this server
PublicKey = DzE7Y4nDN...........Q958KzJIe38EE=
# (optional) some additional security key that is shared between the server and client
# can be generated with `wg genpsk` and should be unique for each peer
PresharedKey = e0CEqD..............Jh4A20/8=
# the ip of the client in the subnet, traffic addressed to this ip/subnet will be routed to this client
AllowedIPs = 192.168.5.2/32
PersistentKeepalive = 25

[Peer]
# PC 2 e.g. desktop pc
# (this pc's config file is not shown in this repository since its similar to the pc 1 file)
PublicKey = ZTTT.............J1D4=
PresharedKey = r0............42023=
AllowedIPs = 192.168.5.3/32
PersistentKeepalive = 25
#################################################################
